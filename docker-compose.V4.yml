services:
  nats-server:
    image: nats:latest # Ocupar versiones espec√≠ficas cuando se trabaje en proyecto real
    ports:
      - 8222:8222

  gateway:
    build:
      context: ./gateway
      dockerfile: dockerfile
      args:
        - PORT=${GATEWAY_PORT}
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    develop:
      watch:
        - action: sync
          path: ./gateway/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    environment:
      - PORT=${GATEWAY_PORT}
      - NATS_SERVERS=${NATS_SERVERS}

  products-ms:
    build:
      context: ./products-microservice
      dockerfile: dockerfile
      args:
        - PORT=${PRODUCTS_MICROSERVICE_PORT}
    ports:
      - ${PRODUCTS_MICROSERVICE_PORT}:${PRODUCTS_MICROSERVICE_PORT}
    develop:
      watch:
        - action: sync
          path: ./products-microservice/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    environment:
      - PORT=${PRODUCTS_MICROSERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=${PRODUCTS_DATABASE_URL}

  auth-ms:
    build:
      context: ./auth-microservice
      dockerfile: dockerfile
      args:
        - PORT=${AUTH_MICROSERVICE_PORT}
    ports:
      - ${AUTH_MICROSERVICE_PORT}:${AUTH_MICROSERVICE_PORT}
    develop:
      watch:
        - action: sync
          path: ./auth-microservice/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    environment:
      - PORT=${AUTH_MICROSERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}

  payments-ms:
    build:
      context: ./payments_microservice
      dockerfile: dockerfile
      args:
        - PORT=${PAYMENTS_MICROSERVICE_PORT}
    develop:
      watch:
        - action: sync
          path: ./payments_microservice/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MICROSERVICE_PORT}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
      - NATS_SERVERS=nats:${NATS_SERVERS}

  orders-ms:
    build:
      context: ./orders-microservice
      dockerfile: dockerfile
      args:
        - PORT=${ORDERS_MICROSERVICE_PORT}
    develop:
      watch:
        - action: sync
          path: ./orders-microservice/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    environment:
      - PORT=${ORDERS_MICROSERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=${ORDERS_DATABASE_URL}

  orders-db:
    container_name: orders-database
    image: postgres:16.2
    volumes:
      - ./orders-microservice/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersdb
